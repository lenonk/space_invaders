#include <cstdint>
#include <string_view>

#include <raylib.h>
#include <vector>

#include "CellRect.h"

namespace SpaceInvaders {
class CellRect;

class Barrier final : public Entity {
public:
    static constexpr uint8_t BarrierHeight = 39;
    static constexpr uint8_t BarrierWidth = 69;

    explicit Barrier(Vector2 position);
    Barrier() = default;
    ~Barrier() override;

    void Draw() override;
    void Damage(const Laser &laser) const;
    void Damage(Vector2 pos, int8_t direction = 1) const;

    [[nodiscard]] std::vector<std::shared_ptr<CellRect>> &GetCellRects() { return m_cellRects; };

    [[nodiscard]] Rectangle GetRect() const override;

private:
    Vector2 m_position {};
    std::vector<std::shared_ptr<CellRect>> m_cellRects {};

    static constexpr std::string_view BarrierPattern =
        "............#############################################............"
        "...........###############################################..........."
        ".........###################################################........."
        "........#####################################################........"
        "......#########################################################......"
        ".....###########################################################....."
        "...###############################################################..."
        ".###################################################################."
        "#####################################################################"
        "#####################################################################"
        "#####################################################################"
        "#####################################################################"
        "#####################################################################"
        "#####################################################################"
        "#####################################################################"
        "#####################################################################"
        "#####################################################################"
        "#####################################################################"
        "#####################################################################"
        "#####################################################################"
        "#####################################################################"
        "#####################################################################"
        "#####################################################################"
        "#####################################################################"
        "#####################################################################"
        "#####################################################################"
        "#####################################################################"
        "#####################################################################"
        "#####################################################################"
        "#####################################################################"
        "###################...............................###################"
        "##################.................................##################"
        "#################...................................#################"
        "################.....................................################"
        "###############.......................................###############"
        "##############.........................................##############"
        "#############...........................................#############"
        "############.............................................############"
        "###########..............................................,###########";
        };

}
